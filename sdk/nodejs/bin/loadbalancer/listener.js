"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Manages a V2 listener resource within OpenStack.
 */
class Listener extends pulumi.CustomResource {
    /**
     * Get an existing Listener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Listener(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["adminStateUp"] = state ? state.adminStateUp : undefined;
            inputs["connectionLimit"] = state ? state.connectionLimit : undefined;
            inputs["defaultPoolId"] = state ? state.defaultPoolId : undefined;
            inputs["defaultTlsContainerRef"] = state ? state.defaultTlsContainerRef : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["loadbalancerId"] = state ? state.loadbalancerId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["protocolPort"] = state ? state.protocolPort : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["sniContainerRefs"] = state ? state.sniContainerRefs : undefined;
            inputs["tenantId"] = state ? state.tenantId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.loadbalancerId === undefined) {
                throw new Error("Missing required property 'loadbalancerId'");
            }
            if (!args || args.protocol === undefined) {
                throw new Error("Missing required property 'protocol'");
            }
            if (!args || args.protocolPort === undefined) {
                throw new Error("Missing required property 'protocolPort'");
            }
            inputs["adminStateUp"] = args ? args.adminStateUp : undefined;
            inputs["connectionLimit"] = args ? args.connectionLimit : undefined;
            inputs["defaultPoolId"] = args ? args.defaultPoolId : undefined;
            inputs["defaultTlsContainerRef"] = args ? args.defaultTlsContainerRef : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["loadbalancerId"] = args ? args.loadbalancerId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["protocolPort"] = args ? args.protocolPort : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["sniContainerRefs"] = args ? args.sniContainerRefs : undefined;
            inputs["tenantId"] = args ? args.tenantId : undefined;
        }
        super("openstack:loadbalancer/listener:Listener", name, inputs, opts);
    }
}
exports.Listener = Listener;
//# sourceMappingURL=listener.js.map