"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Associates a floating IP to a port. This is useful for situations
 * where you have a pre-allocated floating IP or are unable to use the
 * `openstack_networking_floatingip_v2` resource to create a floating IP.
 */
class FloatingIpAssociate extends pulumi.CustomResource {
    /**
     * Get an existing FloatingIpAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new FloatingIpAssociate(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["floatingIp"] = state ? state.floatingIp : undefined;
            inputs["portId"] = state ? state.portId : undefined;
            inputs["region"] = state ? state.region : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.floatingIp === undefined) {
                throw new Error("Missing required property 'floatingIp'");
            }
            if (!args || args.portId === undefined) {
                throw new Error("Missing required property 'portId'");
            }
            inputs["floatingIp"] = args ? args.floatingIp : undefined;
            inputs["portId"] = args ? args.portId : undefined;
            inputs["region"] = args ? args.region : undefined;
        }
        super("openstack:networking/floatingIpAssociate:FloatingIpAssociate", name, inputs, opts);
    }
}
exports.FloatingIpAssociate = FloatingIpAssociate;
//# sourceMappingURL=floatingIpAssociate.js.map