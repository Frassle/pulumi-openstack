"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Manages a V1 container object resource within OpenStack.
 */
class ContainerObject extends pulumi.CustomResource {
    /**
     * Get an existing ContainerObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new ContainerObject(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["containerName"] = state ? state.containerName : undefined;
            inputs["content"] = state ? state.content : undefined;
            inputs["contentDisposition"] = state ? state.contentDisposition : undefined;
            inputs["contentEncoding"] = state ? state.contentEncoding : undefined;
            inputs["contentLength"] = state ? state.contentLength : undefined;
            inputs["contentType"] = state ? state.contentType : undefined;
            inputs["copyFrom"] = state ? state.copyFrom : undefined;
            inputs["date"] = state ? state.date : undefined;
            inputs["deleteAfter"] = state ? state.deleteAfter : undefined;
            inputs["deleteAt"] = state ? state.deleteAt : undefined;
            inputs["detectContentType"] = state ? state.detectContentType : undefined;
            inputs["etag"] = state ? state.etag : undefined;
            inputs["lastModified"] = state ? state.lastModified : undefined;
            inputs["metadata"] = state ? state.metadata : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["objectManifest"] = state ? state.objectManifest : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["source"] = state ? state.source : undefined;
            inputs["transId"] = state ? state.transId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.containerName === undefined) {
                throw new Error("Missing required property 'containerName'");
            }
            inputs["containerName"] = args ? args.containerName : undefined;
            inputs["content"] = args ? args.content : undefined;
            inputs["contentDisposition"] = args ? args.contentDisposition : undefined;
            inputs["contentEncoding"] = args ? args.contentEncoding : undefined;
            inputs["contentType"] = args ? args.contentType : undefined;
            inputs["copyFrom"] = args ? args.copyFrom : undefined;
            inputs["deleteAfter"] = args ? args.deleteAfter : undefined;
            inputs["deleteAt"] = args ? args.deleteAt : undefined;
            inputs["detectContentType"] = args ? args.detectContentType : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["metadata"] = args ? args.metadata : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["objectManifest"] = args ? args.objectManifest : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["contentLength"] = undefined /*out*/;
            inputs["date"] = undefined /*out*/;
            inputs["lastModified"] = undefined /*out*/;
            inputs["transId"] = undefined /*out*/;
        }
        super("openstack:objectstorage/containerObject:ContainerObject", name, inputs, opts);
    }
}
exports.ContainerObject = ContainerObject;
//# sourceMappingURL=containerObject.js.map