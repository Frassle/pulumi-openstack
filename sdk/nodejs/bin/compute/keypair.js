"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Manages a V2 keypair resource within OpenStack.
 *
 * ~> **Important Security Notice** The private key generated by this resource will
 * be stored *unencrypted* in your Terraform state file. **Use of this resource
 * for production deployments is *not* recommended**. Instead, generate
 * a private key file outside of Terraform and distribute it securely
 * to the system where Terraform will be run.
 */
class Keypair extends pulumi.CustomResource {
    /**
     * Get an existing Keypair resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Keypair(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["fingerprint"] = state ? state.fingerprint : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["privateKey"] = state ? state.privateKey : undefined;
            inputs["publicKey"] = state ? state.publicKey : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["valueSpecs"] = state ? state.valueSpecs : undefined;
        }
        else {
            const args = argsOrState;
            inputs["name"] = args ? args.name : undefined;
            inputs["publicKey"] = args ? args.publicKey : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["valueSpecs"] = args ? args.valueSpecs : undefined;
            inputs["fingerprint"] = undefined /*out*/;
            inputs["privateKey"] = undefined /*out*/;
        }
        super("openstack:compute/keypair:Keypair", name, inputs, opts);
    }
}
exports.Keypair = Keypair;
//# sourceMappingURL=keypair.js.map