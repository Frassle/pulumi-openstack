// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"github.com/pulumi/pulumi/sdk/go/pulumi/config"
)

// The Identity authentication URL.
func GetAuthUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:authUrl")
}

// A Custom CA certificate.
func GetCacertFile(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:cacertFile")
}

// A client certificate to authenticate with.
func GetCert(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:cert")
}

// An entry in a `clouds.yaml` file to use.
func GetCloud(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:cloud")
}

// The ID of the Domain to scope to (Identity v3).
func GetDomainId(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:domainId")
}

// The name of the Domain to scope to (Identity v3).
func GetDomainName(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:domainName")
}

func GetEndpointType(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:endpointType")
}

// Trust self-signed certificates.
func GetInsecure(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "openstack:insecure")
}

// A client private key to authenticate with.
func GetKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:key")
}

// Password to login with.
func GetPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:password")
}

// The ID of the domain where the proejct resides (Identity v3).
func GetProjectDomainId(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:projectDomainId")
}

// The name of the domain where the project resides (Identity v3).
func GetProjectDomainName(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:projectDomainName")
}

// The OpenStack region to connect to.
func GetRegion(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:region")
}

// Use Swift's authentication system instead of Keystone. Only used for interaction with Swift.
func GetSwauth(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "openstack:swauth")
}

// The ID of the Tenant (Identity v2) or Project (Identity v3) to login with.
func GetTenantId(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:tenantId")
}

// The name of the Tenant (Identity v2) or Project (Identity v3) to login with.
func GetTenantName(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:tenantName")
}

// Authentication token to use as an alternative to username/password.
func GetToken(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:token")
}

// If set to `true`, API requests will go the Load Balancer service (Octavia) instead of the Networking service (Neutron).
func GetUseOctavia(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "openstack:useOctavia")
}

// The ID of the domain where the user resides (Identity v3).
func GetUserDomainId(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:userDomainId")
}

// The name of the domain where the user resides (Identity v3).
func GetUserDomainName(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:userDomainName")
}

// Username to login with.
func GetUserId(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:userId")
}

// Username to login with.
func GetUserName(ctx *pulumi.Context) string {
	return config.Get(ctx, "openstack:userName")
}
