// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Networking {

	/// <summary>
	/// The set of arguments for constructing a SecGroup resource.
	/// </summary>
	public struct SecGroupArgs {
		/// <summary>
		/// Whether or not to delete the default
		/// egress security rules. This is `false` by default. See the below note
		/// for more information.
		/// </summary>
		public Pulumi.IO<bool> DeleteDefaultRules { get; set; }

		/// <summary>
		/// A unique name for the security group.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// A unique name for the security group.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 networking client.
		/// A networking client is needed to create a port. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// security group.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The owner of the security group. Required if admin
		/// wants to create a port for another tenant. Changing this creates a new
		/// security group.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

	} // SecGroupArgs

	/// <summary>
	/// Manages a V2 neutron security group resource within OpenStack.
	/// Unlike Nova security groups, neutron separates the group from the rules
	/// and also allows an admin to target a specific tenant_id.
	/// </summary>
	public class SecGroup : Pulumi.CustomResource {
		/// <summary>
		/// Whether or not to delete the default
		/// egress security rules. This is `false` by default. See the below note
		/// for more information.
		/// </summary>
		public Pulumi.IO<bool> DeleteDefaultRules { get; set; }

		/// <summary>
		/// A unique name for the security group.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// A unique name for the security group.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 networking client.
		/// A networking client is needed to create a port. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// security group.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The owner of the security group. Required if admin
		/// wants to create a port for another tenant. Changing this creates a new
		/// security group.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

		public SecGroup(string name, SecGroupArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:networking/secGroup:SecGroup", name, SerialiseArgs(args), opts) {
			DeleteDefaultRules = Outputs["deleteDefaultRules"].Select(item => Protobuf.ToBool(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
			DeleteDefaultRules = Outputs["deleteDefaultRules"].Select(item => Protobuf.ToBool(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SecGroupArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["deleteDefaultRules"] = Protobuf.ToProtobuf(args.DeleteDefaultRules);
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			props["tenantId"] = Protobuf.ToProtobuf(args.TenantId);
			return props;
		} // SerialiseArgs

	} // SecGroup
} // Pulumi.Openstack.Networking
