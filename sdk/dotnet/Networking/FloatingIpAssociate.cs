// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Networking {

	/// <summary>
	/// The set of arguments for constructing a FloatingIpAssociate resource.
	/// </summary>
	public struct FloatingIpAssociateArgs {
		/// <summary>
		/// IP Address of an existing floating IP.
		/// </summary>
		public Pulumi.IO<string> FloatingIp { get; set; }

		/// <summary>
		/// ID of an existing port with at least one IP address to
		/// associate with this floating IP.
		/// </summary>
		public Pulumi.IO<string> PortId { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Networking client.
		/// A Networking client is needed to create a floating IP that can be used with
		/// another networking resource, such as a load balancer. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// floating IP (which may or may not have a different address).
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

	} // FloatingIpAssociateArgs

	/// <summary>
	/// Associates a floating IP to a port. This is useful for situations
	/// where you have a pre-allocated floating IP or are unable to use the
	/// `openstack_networking_floatingip_v2` resource to create a floating IP.
	/// </summary>
	public class FloatingIpAssociate : Pulumi.CustomResource {
		/// <summary>
		/// IP Address of an existing floating IP.
		/// </summary>
		public Pulumi.IO<string> FloatingIp { get; set; }

		/// <summary>
		/// ID of an existing port with at least one IP address to
		/// associate with this floating IP.
		/// </summary>
		public Pulumi.IO<string> PortId { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Networking client.
		/// A Networking client is needed to create a floating IP that can be used with
		/// another networking resource, such as a load balancer. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// floating IP (which may or may not have a different address).
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		public FloatingIpAssociate(string name, FloatingIpAssociateArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:networking/floatingIpAssociate:FloatingIpAssociate", name, SerialiseArgs(args), opts) {
			FloatingIp = Outputs["floatingIp"].Select(item => Protobuf.ToString(item));
			PortId = Outputs["portId"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			FloatingIp = Outputs["floatingIp"].Select(item => Protobuf.ToString(item));
			PortId = Outputs["portId"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(FloatingIpAssociateArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["floatingIp"] = Protobuf.ToProtobuf(args.FloatingIp);
			props["portId"] = Protobuf.ToProtobuf(args.PortId);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			return props;
		} // SerialiseArgs

	} // FloatingIpAssociate
} // Pulumi.Openstack.Networking
