// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Networking {

	/// <summary>
	/// The set of arguments for constructing a SecGroupRule resource.
	/// </summary>
	public struct SecGroupRuleArgs {
		/// <summary>
		/// The direction of the rule, valid values are __ingress__
		/// or __egress__. Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> Direction { get; set; }

		/// <summary>
		/// The layer 3 protocol type, valid values are __IPv4__
		/// or __IPv6__. Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> Ethertype { get; set; }

		/// <summary>
		/// The higher part of the allowed port range, valid
		/// integer value needs to be between 1 and 65535. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<int> PortRangeMax { get; set; }

		/// <summary>
		/// The lower part of the allowed port range, valid
		/// integer value needs to be between 1 and 65535. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<int> PortRangeMin { get; set; }

		/// <summary>
		/// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
		/// * __tcp__
		/// * __udp__
		/// * __icmp__
		/// * __ah__
		/// * __dccp__
		/// * __egp__
		/// * __esp__
		/// * __gre__
		/// * __igmp__
		/// * __ipv6-encap__
		/// * __ipv6-frag__
		/// * __ipv6-icmp__
		/// * __ipv6-nonxt__
		/// * __ipv6-opts__
		/// * __ipv6-route__
		/// * __ospf__
		/// * __pgm__
		/// * __rsvp__
		/// * __sctp__
		/// * __udplite__
		/// * __vrrp__
		/// </summary>
		public Pulumi.IO<string> Protocol { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 networking client.
		/// A networking client is needed to create a port. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The remote group id, the value needs to be an
		/// Openstack ID of a security group in the same tenant. Changing this creates
		/// a new security group rule.
		/// </summary>
		public Pulumi.IO<string> RemoteGroupId { get; set; }

		/// <summary>
		/// The remote CIDR, the value needs to be a valid
		/// CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> RemoteIpPrefix { get; set; }

		/// <summary>
		/// The security group id the rule should belong
		/// to, the value needs to be an Openstack ID of a security group in the same
		/// tenant. Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> SecurityGroupId { get; set; }

		/// <summary>
		/// The owner of the security group. Required if admin
		/// wants to create a port for another tenant. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

	} // SecGroupRuleArgs

	/// <summary>
	/// Manages a V2 neutron security group rule resource within OpenStack.
	/// Unlike Nova security groups, neutron separates the group from the rules
	/// and also allows an admin to target a specific tenant_id.
	/// </summary>
	public class SecGroupRule : Pulumi.CustomResource {
		/// <summary>
		/// The direction of the rule, valid values are __ingress__
		/// or __egress__. Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> Direction { get; set; }

		/// <summary>
		/// The layer 3 protocol type, valid values are __IPv4__
		/// or __IPv6__. Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> Ethertype { get; set; }

		/// <summary>
		/// The higher part of the allowed port range, valid
		/// integer value needs to be between 1 and 65535. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<int> PortRangeMax { get; set; }

		/// <summary>
		/// The lower part of the allowed port range, valid
		/// integer value needs to be between 1 and 65535. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<int> PortRangeMin { get; set; }

		/// <summary>
		/// The layer 4 protocol type, valid values are following. Changing this creates a new security group rule. This is required if you want to specify a port range.
		/// * __tcp__
		/// * __udp__
		/// * __icmp__
		/// * __ah__
		/// * __dccp__
		/// * __egp__
		/// * __esp__
		/// * __gre__
		/// * __igmp__
		/// * __ipv6-encap__
		/// * __ipv6-frag__
		/// * __ipv6-icmp__
		/// * __ipv6-nonxt__
		/// * __ipv6-opts__
		/// * __ipv6-route__
		/// * __ospf__
		/// * __pgm__
		/// * __rsvp__
		/// * __sctp__
		/// * __udplite__
		/// * __vrrp__
		/// </summary>
		public Pulumi.IO<string> Protocol { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 networking client.
		/// A networking client is needed to create a port. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The remote group id, the value needs to be an
		/// Openstack ID of a security group in the same tenant. Changing this creates
		/// a new security group rule.
		/// </summary>
		public Pulumi.IO<string> RemoteGroupId { get; set; }

		/// <summary>
		/// The remote CIDR, the value needs to be a valid
		/// CIDR (i.e. 192.168.0.0/16). Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> RemoteIpPrefix { get; set; }

		/// <summary>
		/// The security group id the rule should belong
		/// to, the value needs to be an Openstack ID of a security group in the same
		/// tenant. Changing this creates a new security group rule.
		/// </summary>
		public Pulumi.IO<string> SecurityGroupId { get; set; }

		/// <summary>
		/// The owner of the security group. Required if admin
		/// wants to create a port for another tenant. Changing this creates a new
		/// security group rule.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

		public SecGroupRule(string name, SecGroupRuleArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:networking/secGroupRule:SecGroupRule", name, SerialiseArgs(args), opts) {
			Direction = Outputs["direction"].Select(item => Protobuf.ToString(item));
			Ethertype = Outputs["ethertype"].Select(item => Protobuf.ToString(item));
			PortRangeMax = Outputs["portRangeMax"].Select(item => Protobuf.ToInt(item));
			PortRangeMin = Outputs["portRangeMin"].Select(item => Protobuf.ToInt(item));
			Protocol = Outputs["protocol"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			RemoteGroupId = Outputs["remoteGroupId"].Select(item => Protobuf.ToString(item));
			RemoteIpPrefix = Outputs["remoteIpPrefix"].Select(item => Protobuf.ToString(item));
			SecurityGroupId = Outputs["securityGroupId"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
			Direction = Outputs["direction"].Select(item => Protobuf.ToString(item));
			Ethertype = Outputs["ethertype"].Select(item => Protobuf.ToString(item));
			PortRangeMax = Outputs["portRangeMax"].Select(item => Protobuf.ToInt(item));
			PortRangeMin = Outputs["portRangeMin"].Select(item => Protobuf.ToInt(item));
			Protocol = Outputs["protocol"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			RemoteGroupId = Outputs["remoteGroupId"].Select(item => Protobuf.ToString(item));
			RemoteIpPrefix = Outputs["remoteIpPrefix"].Select(item => Protobuf.ToString(item));
			SecurityGroupId = Outputs["securityGroupId"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SecGroupRuleArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["direction"] = Protobuf.ToProtobuf(args.Direction);
			props["ethertype"] = Protobuf.ToProtobuf(args.Ethertype);
			props["portRangeMax"] = Protobuf.ToProtobuf(args.PortRangeMax);
			props["portRangeMin"] = Protobuf.ToProtobuf(args.PortRangeMin);
			props["protocol"] = Protobuf.ToProtobuf(args.Protocol);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			props["remoteGroupId"] = Protobuf.ToProtobuf(args.RemoteGroupId);
			props["remoteIpPrefix"] = Protobuf.ToProtobuf(args.RemoteIpPrefix);
			props["securityGroupId"] = Protobuf.ToProtobuf(args.SecurityGroupId);
			props["tenantId"] = Protobuf.ToProtobuf(args.TenantId);
			return props;
		} // SerialiseArgs

	} // SecGroupRule
} // Pulumi.Openstack.Networking
