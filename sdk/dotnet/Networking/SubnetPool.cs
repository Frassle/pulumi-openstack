// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Networking {

	/// <summary>
	/// The set of arguments for constructing a SubnetPool resource.
	/// </summary>
	public struct SubnetPoolArgs {
		/// <summary>
		/// The Neutron address scope to assign to the
		/// subnetpool. Changing this updates the address scope id of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<string> AddressScopeId { get; set; }

		/// <summary>
		/// The size of the prefix to allocate when the cidr
		/// or prefixlen attributes are omitted when you create the subnet. Defaults to the
		/// MinPrefixLen. Changing this updates the default prefixlen of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<int> DefaultPrefixlen { get; set; }

		/// <summary>
		/// The per-project quota on the prefix space that can be
		/// allocated from the subnetpool for project subnets. Changing this updates the
		/// default quota of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<int> DefaultQuota { get; set; }

		/// <summary>
		/// The human-readable description for the subnetpool.
		/// Changing this updates the description of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The IP protocol version.
		/// </summary>
		public Pulumi.IO<int> IpVersion { get; set; }

		/// <summary>
		/// Indicates whether the subnetpool is default
		/// subnetpool or not. Changing this updates the default status of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<bool> IsDefault { get; set; }

		/// <summary>
		/// The maximum prefix size that can be allocated from
		/// the subnetpool. For IPv4 subnetpools, default is 32. For IPv6 subnetpools,
		/// default is 128. Changing this updates the max prefixlen of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<int> MaxPrefixlen { get; set; }

		/// <summary>
		/// The smallest prefix that can be allocated from a
		/// subnetpool. For IPv4 subnetpools, default is 8. For IPv6 subnetpools, default
		/// is 64. Changing this updates the min prefixlen of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<int> MinPrefixlen { get; set; }

		/// <summary>
		/// The name of the subnetpool. Changing this updates the name of
		/// the existing subnetpool.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A list of subnet prefixes to assign to the subnetpool.
		/// Neutron API merges adjacent prefixes and treats them as a single prefix. Each
		/// subnet prefix must be unique among all subnet prefixes in all subnetpools that
		/// are associated with the address scope. Changing this updates the prefixes list
		/// of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> Prefixes { get; set; }

		/// <summary>
		/// The owner of the subnetpool. Required if admin wants to
		/// create a subnetpool for another project. Changing this creates a new subnetpool.
		/// </summary>
		public Pulumi.IO<string> ProjectId { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Networking client.
		/// A Networking client is needed to create a Neutron subnetpool. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// Indicates whether this subnetpool is shared across
		/// all projects. Changing this updates the shared status of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<bool> Shared { get; set; }

		/// <summary>
		/// Map of additional options.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> ValueSpecs { get; set; }

	} // SubnetPoolArgs

	/// <summary>
	/// Manages a V2 Neutron subnetpool resource within OpenStack.
	/// </summary>
	public class SubnetPool : Pulumi.CustomResource {
		/// <summary>
		/// The Neutron address scope to assign to the
		/// subnetpool. Changing this updates the address scope id of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<string> AddressScopeId { get; set; }

		/// <summary>
		/// The time at which subnetpool was created.
		/// </summary>
		public Pulumi.IO<string> CreatedAt { get; set; }

		/// <summary>
		/// The size of the prefix to allocate when the cidr
		/// or prefixlen attributes are omitted when you create the subnet. Defaults to the
		/// MinPrefixLen. Changing this updates the default prefixlen of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<int> DefaultPrefixlen { get; set; }

		/// <summary>
		/// The per-project quota on the prefix space that can be
		/// allocated from the subnetpool for project subnets. Changing this updates the
		/// default quota of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<int> DefaultQuota { get; set; }

		/// <summary>
		/// The human-readable description for the subnetpool.
		/// Changing this updates the description of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The IP protocol version.
		/// </summary>
		public Pulumi.IO<int> IpVersion { get; set; }

		/// <summary>
		/// Indicates whether the subnetpool is default
		/// subnetpool or not. Changing this updates the default status of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<bool> IsDefault { get; set; }

		/// <summary>
		/// The maximum prefix size that can be allocated from
		/// the subnetpool. For IPv4 subnetpools, default is 32. For IPv6 subnetpools,
		/// default is 128. Changing this updates the max prefixlen of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<int> MaxPrefixlen { get; set; }

		/// <summary>
		/// The smallest prefix that can be allocated from a
		/// subnetpool. For IPv4 subnetpools, default is 8. For IPv6 subnetpools, default
		/// is 64. Changing this updates the min prefixlen of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<int> MinPrefixlen { get; set; }

		/// <summary>
		/// The name of the subnetpool. Changing this updates the name of
		/// the existing subnetpool.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// A list of subnet prefixes to assign to the subnetpool.
		/// Neutron API merges adjacent prefixes and treats them as a single prefix. Each
		/// subnet prefix must be unique among all subnet prefixes in all subnetpools that
		/// are associated with the address scope. Changing this updates the prefixes list
		/// of the existing subnetpool.
		/// </summary>
		public Pulumi.IO<string[]> Prefixes { get; set; }

		/// <summary>
		/// The owner of the subnetpool. Required if admin wants to
		/// create a subnetpool for another project. Changing this creates a new subnetpool.
		/// </summary>
		public Pulumi.IO<string> ProjectId { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Networking client.
		/// A Networking client is needed to create a Neutron subnetpool. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The revision number of the subnetpool.
		/// </summary>
		public Pulumi.IO<int> RevisionNumber { get; set; }

		/// <summary>
		/// Indicates whether this subnetpool is shared across
		/// all projects. Changing this updates the shared status of the existing
		/// subnetpool.
		/// </summary>
		public Pulumi.IO<bool> Shared { get; set; }

		/// <summary>
		/// The time at which subnetpool was created.
		/// </summary>
		public Pulumi.IO<string> UpdatedAt { get; set; }

		/// <summary>
		/// Map of additional options.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> ValueSpecs { get; set; }

		public SubnetPool(string name, SubnetPoolArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:networking/subnetPool:SubnetPool", name, SerialiseArgs(args), opts) {
			AddressScopeId = Outputs["addressScopeId"].Select(item => Protobuf.ToString(item));
			DefaultPrefixlen = Outputs["defaultPrefixlen"].Select(item => Protobuf.ToInt(item));
			DefaultQuota = Outputs["defaultQuota"].Select(item => Protobuf.ToInt(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			IpVersion = Outputs["ipVersion"].Select(item => Protobuf.ToInt(item));
			IsDefault = Outputs["isDefault"].Select(item => Protobuf.ToBool(item));
			MaxPrefixlen = Outputs["maxPrefixlen"].Select(item => Protobuf.ToInt(item));
			MinPrefixlen = Outputs["minPrefixlen"].Select(item => Protobuf.ToInt(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Prefixes = Outputs["prefixes"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			ProjectId = Outputs["projectId"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Shared = Outputs["shared"].Select(item => Protobuf.ToBool(item));
			ValueSpecs = Outputs["valueSpecs"].Select(item => Protobuf.ToMap(item));
			AddressScopeId = Outputs["addressScopeId"].Select(item => Protobuf.ToString(item));
			CreatedAt = Outputs["createdAt"].Select(item => Protobuf.ToString(item));
			DefaultPrefixlen = Outputs["defaultPrefixlen"].Select(item => Protobuf.ToInt(item));
			DefaultQuota = Outputs["defaultQuota"].Select(item => Protobuf.ToInt(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			IpVersion = Outputs["ipVersion"].Select(item => Protobuf.ToInt(item));
			IsDefault = Outputs["isDefault"].Select(item => Protobuf.ToBool(item));
			MaxPrefixlen = Outputs["maxPrefixlen"].Select(item => Protobuf.ToInt(item));
			MinPrefixlen = Outputs["minPrefixlen"].Select(item => Protobuf.ToInt(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Prefixes = Outputs["prefixes"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			ProjectId = Outputs["projectId"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			RevisionNumber = Outputs["revisionNumber"].Select(item => Protobuf.ToInt(item));
			Shared = Outputs["shared"].Select(item => Protobuf.ToBool(item));
			UpdatedAt = Outputs["updatedAt"].Select(item => Protobuf.ToString(item));
			ValueSpecs = Outputs["valueSpecs"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SubnetPoolArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["addressScopeId"] = Protobuf.ToProtobuf(args.AddressScopeId);
			props["defaultPrefixlen"] = Protobuf.ToProtobuf(args.DefaultPrefixlen);
			props["defaultQuota"] = Protobuf.ToProtobuf(args.DefaultQuota);
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["ipVersion"] = Protobuf.ToProtobuf(args.IpVersion);
			props["isDefault"] = Protobuf.ToProtobuf(args.IsDefault);
			props["maxPrefixlen"] = Protobuf.ToProtobuf(args.MaxPrefixlen);
			props["minPrefixlen"] = Protobuf.ToProtobuf(args.MinPrefixlen);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["prefixes"] = Protobuf.ToProtobuf(args.Prefixes, item => Protobuf.ToProtobuf(item));
			props["projectId"] = Protobuf.ToProtobuf(args.ProjectId);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			props["shared"] = Protobuf.ToProtobuf(args.Shared);
			props["valueSpecs"] = Protobuf.ToProtobuf(args.ValueSpecs);
			props["createdAt"] = null; //out
			props["revisionNumber"] = null; //out
			props["updatedAt"] = null; //out
			return props;
		} // SerialiseArgs

	} // SubnetPool
} // Pulumi.Openstack.Networking
