// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Networking {

	/// <summary>
	/// A collection of arguments for invoking getSubnetPool.
	/// </summary>
	public struct GetSubnetPoolArgs {
		/// <summary>
		/// The Neutron address scope that subnetpools
		/// is assigned to.
		/// </summary>
		public string AddressScopeId { get; set; }

		/// <summary>
		/// The size of the subnetpool default prefix
		/// length.
		/// </summary>
		public int DefaultPrefixlen { get; set; }

		/// <summary>
		/// The per-project quota on the prefix space that
		/// can be allocated from the subnetpool for project subnets.
		/// </summary>
		public int DefaultQuota { get; set; }

		/// <summary>
		/// The human-readable description for the subnetpool.
		/// </summary>
		public string Description { get; set; }

		/// <summary>
		/// The IP protocol version.
		/// </summary>
		public int IpVersion { get; set; }

		/// <summary>
		/// Whether the subnetpool is default subnetpool or not.
		/// </summary>
		public bool IsDefault { get; set; }

		/// <summary>
		/// The size of the subnetpool max prefix length.
		/// </summary>
		public int MaxPrefixlen { get; set; }

		/// <summary>
		/// The size of the subnetpool min prefix length.
		/// </summary>
		public int MinPrefixlen { get; set; }

		/// <summary>
		/// The name of the subnetpool.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The owner of the subnetpool.
		/// </summary>
		public string ProjectId { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Networking client.
		/// A Networking client is needed to retrieve a subnetpool id. If omitted, the
		/// `region` argument of the provider is used.
		/// </summary>
		public string Region { get; set; }

		/// <summary>
		/// Whether this subnetpool is shared across all projects.
		/// </summary>
		public bool Shared { get; set; }

	} // GetSubnetPoolArgs

	/// <summary>
	/// A collection of values returned by getSubnetPool.
	/// </summary>
	public struct GetSubnetPoolResult {
		/// <summary>
		/// See Argument Reference above.
		/// * `ip_version` -The IP protocol version.
		/// </summary>
		public string AddressScopeId { get; set; }

		/// <summary>
		/// The time at which subnetpool was created.
		/// </summary>
		public string CreatedAt { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public int DefaultPrefixlen { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public int DefaultQuota { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string Description { get; set; }

		public int IpVersion { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public bool IsDefault { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public int MaxPrefixlen { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public int MinPrefixlen { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string[] Prefixes { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string ProjectId { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string Region { get; set; }

		/// <summary>
		/// The revision number of the subnetpool.
		/// </summary>
		public int RevisionNumber { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public bool Shared { get; set; }

		/// <summary>
		/// The time at which subnetpool was created.
		/// </summary>
		public string UpdatedAt { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetSubnetPoolResult

	public static partial class NetworkingModule {
		/// <summary>
		/// Use this data source to get the ID of an available OpenStack subnetpool.
		/// </summary>
		public static System.Threading.Tasks.Task<GetSubnetPoolResult> GetSubnetPool(GetSubnetPoolArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["addressScopeId"] = Protobuf.ToProtobuf(args.AddressScopeId);
			invokeArgs.Fields["defaultPrefixlen"] = Protobuf.ToProtobuf(args.DefaultPrefixlen);
			invokeArgs.Fields["defaultQuota"] = Protobuf.ToProtobuf(args.DefaultQuota);
			invokeArgs.Fields["description"] = Protobuf.ToProtobuf(args.Description);
			invokeArgs.Fields["ipVersion"] = Protobuf.ToProtobuf(args.IpVersion);
			invokeArgs.Fields["isDefault"] = Protobuf.ToProtobuf(args.IsDefault);
			invokeArgs.Fields["maxPrefixlen"] = Protobuf.ToProtobuf(args.MaxPrefixlen);
			invokeArgs.Fields["minPrefixlen"] = Protobuf.ToProtobuf(args.MinPrefixlen);
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["projectId"] = Protobuf.ToProtobuf(args.ProjectId);
			invokeArgs.Fields["region"] = Protobuf.ToProtobuf(args.Region);
			invokeArgs.Fields["shared"] = Protobuf.ToProtobuf(args.Shared);

			var task = Pulumi.Runtime.InvokeAsync("openstack:networking/getSubnetPool:getSubnetPool", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetSubnetPoolResult();
				if (protobuf.Fields.ContainsKey("addressScopeId")) {
					result.AddressScopeId = Protobuf.ToString(protobuf.Fields["addressScopeId"]);
				}
				if (protobuf.Fields.ContainsKey("createdAt")) {
					result.CreatedAt = Protobuf.ToString(protobuf.Fields["createdAt"]);
				}
				if (protobuf.Fields.ContainsKey("defaultPrefixlen")) {
					result.DefaultPrefixlen = Protobuf.ToInt(protobuf.Fields["defaultPrefixlen"]);
				}
				if (protobuf.Fields.ContainsKey("defaultQuota")) {
					result.DefaultQuota = Protobuf.ToInt(protobuf.Fields["defaultQuota"]);
				}
				if (protobuf.Fields.ContainsKey("description")) {
					result.Description = Protobuf.ToString(protobuf.Fields["description"]);
				}
				if (protobuf.Fields.ContainsKey("ipVersion")) {
					result.IpVersion = Protobuf.ToInt(protobuf.Fields["ipVersion"]);
				}
				if (protobuf.Fields.ContainsKey("isDefault")) {
					result.IsDefault = Protobuf.ToBool(protobuf.Fields["isDefault"]);
				}
				if (protobuf.Fields.ContainsKey("maxPrefixlen")) {
					result.MaxPrefixlen = Protobuf.ToInt(protobuf.Fields["maxPrefixlen"]);
				}
				if (protobuf.Fields.ContainsKey("minPrefixlen")) {
					result.MinPrefixlen = Protobuf.ToInt(protobuf.Fields["minPrefixlen"]);
				}
				if (protobuf.Fields.ContainsKey("name")) {
					result.Name = Protobuf.ToString(protobuf.Fields["name"]);
				}
				if (protobuf.Fields.ContainsKey("prefixes")) {
					result.Prefixes = Protobuf.ToList(protobuf.Fields["prefixes"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("projectId")) {
					result.ProjectId = Protobuf.ToString(protobuf.Fields["projectId"]);
				}
				if (protobuf.Fields.ContainsKey("region")) {
					result.Region = Protobuf.ToString(protobuf.Fields["region"]);
				}
				if (protobuf.Fields.ContainsKey("revisionNumber")) {
					result.RevisionNumber = Protobuf.ToInt(protobuf.Fields["revisionNumber"]);
				}
				if (protobuf.Fields.ContainsKey("shared")) {
					result.Shared = Protobuf.ToBool(protobuf.Fields["shared"]);
				}
				if (protobuf.Fields.ContainsKey("updatedAt")) {
					result.UpdatedAt = Protobuf.ToString(protobuf.Fields["updatedAt"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetSubnetPool

	} // NetworkingModule
} // Pulumi.Openstack.Networking
