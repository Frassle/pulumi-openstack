// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Firewall {

	/// <summary>
	/// The set of arguments for constructing a Rule resource.
	/// </summary>
	public struct RuleArgs {
		/// <summary>
		/// Action to be taken ( must be "allow" or "deny") when the
		/// firewall rule matches. Changing this updates the `action` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> Action { get; set; }

		/// <summary>
		/// A description for the firewall rule. Changing this
		/// updates the `description` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The destination IP address on which the
		/// firewall rule operates. Changing this updates the `destination_ip_address`
		/// of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> DestinationIpAddress { get; set; }

		/// <summary>
		/// The destination port on which the firewall
		/// rule operates. Changing this updates the `destination_port` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> DestinationPort { get; set; }

		/// <summary>
		/// Enabled status for the firewall rule (must be "true"
		/// or "false" if provided - defaults to "true"). Changing this updates the
		/// `enabled` status of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// IP version, either 4 (default) or 6. Changing this
		/// updates the `ip_version` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<int> IpVersion { get; set; }

		/// <summary>
		/// A unique name for the firewall rule. Changing this
		/// updates the `name` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The protocol type on which the firewall rule operates.
		/// Valid values are: `tcp`, `udp`, `icmp`, and `any`. Changing this updates the
		/// `protocol` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> Protocol { get; set; }

		/// <summary>
		/// The region in which to obtain the v1 Compute client.
		/// A Compute client is needed to create a firewall rule. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The source IP address on which the firewall
		/// rule operates. Changing this updates the `source_ip_address` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> SourceIpAddress { get; set; }

		/// <summary>
		/// The source port on which the firewall
		/// rule operates. Changing this updates the `source_port` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> SourcePort { get; set; }

		/// <summary>
		/// The owner of the firewall rule. Required if admin
		/// wants to create a firewall rule for another tenant. Changing this creates a
		/// new firewall rule.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

		/// <summary>
		/// Map of additional options.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> ValueSpecs { get; set; }

	} // RuleArgs

	/// <summary>
	/// Manages a v1 firewall rule resource within OpenStack.
	/// </summary>
	public class Rule : Pulumi.CustomResource {
		/// <summary>
		/// Action to be taken ( must be "allow" or "deny") when the
		/// firewall rule matches. Changing this updates the `action` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> Action { get; set; }

		/// <summary>
		/// A description for the firewall rule. Changing this
		/// updates the `description` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The destination IP address on which the
		/// firewall rule operates. Changing this updates the `destination_ip_address`
		/// of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> DestinationIpAddress { get; set; }

		/// <summary>
		/// The destination port on which the firewall
		/// rule operates. Changing this updates the `destination_port` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> DestinationPort { get; set; }

		/// <summary>
		/// Enabled status for the firewall rule (must be "true"
		/// or "false" if provided - defaults to "true"). Changing this updates the
		/// `enabled` status of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// IP version, either 4 (default) or 6. Changing this
		/// updates the `ip_version` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<int> IpVersion { get; set; }

		/// <summary>
		/// A unique name for the firewall rule. Changing this
		/// updates the `name` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The protocol type on which the firewall rule operates.
		/// Valid values are: `tcp`, `udp`, `icmp`, and `any`. Changing this updates the
		/// `protocol` of an existing firewall rule.
		/// </summary>
		public Pulumi.IO<string> Protocol { get; set; }

		/// <summary>
		/// The region in which to obtain the v1 Compute client.
		/// A Compute client is needed to create a firewall rule. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The source IP address on which the firewall
		/// rule operates. Changing this updates the `source_ip_address` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> SourceIpAddress { get; set; }

		/// <summary>
		/// The source port on which the firewall
		/// rule operates. Changing this updates the `source_port` of an existing
		/// firewall rule.
		/// </summary>
		public Pulumi.IO<string> SourcePort { get; set; }

		/// <summary>
		/// The owner of the firewall rule. Required if admin
		/// wants to create a firewall rule for another tenant. Changing this creates a
		/// new firewall rule.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

		/// <summary>
		/// Map of additional options.
		/// </summary>
		public Pulumi.IO<System.Collections.Generic.Dictionary<string, string>> ValueSpecs { get; set; }

		public Rule(string name, RuleArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:firewall/rule:Rule", name, SerialiseArgs(args), opts) {
			Action = Outputs["action"].Select(item => Protobuf.ToString(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			DestinationIpAddress = Outputs["destinationIpAddress"].Select(item => Protobuf.ToString(item));
			DestinationPort = Outputs["destinationPort"].Select(item => Protobuf.ToString(item));
			Enabled = Outputs["enabled"].Select(item => Protobuf.ToBool(item));
			IpVersion = Outputs["ipVersion"].Select(item => Protobuf.ToInt(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Protocol = Outputs["protocol"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			SourceIpAddress = Outputs["sourceIpAddress"].Select(item => Protobuf.ToString(item));
			SourcePort = Outputs["sourcePort"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
			ValueSpecs = Outputs["valueSpecs"].Select(item => Protobuf.ToMap(item));
			Action = Outputs["action"].Select(item => Protobuf.ToString(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			DestinationIpAddress = Outputs["destinationIpAddress"].Select(item => Protobuf.ToString(item));
			DestinationPort = Outputs["destinationPort"].Select(item => Protobuf.ToString(item));
			Enabled = Outputs["enabled"].Select(item => Protobuf.ToBool(item));
			IpVersion = Outputs["ipVersion"].Select(item => Protobuf.ToInt(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Protocol = Outputs["protocol"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			SourceIpAddress = Outputs["sourceIpAddress"].Select(item => Protobuf.ToString(item));
			SourcePort = Outputs["sourcePort"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
			ValueSpecs = Outputs["valueSpecs"].Select(item => Protobuf.ToMap(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(RuleArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["action"] = Protobuf.ToProtobuf(args.Action);
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["destinationIpAddress"] = Protobuf.ToProtobuf(args.DestinationIpAddress);
			props["destinationPort"] = Protobuf.ToProtobuf(args.DestinationPort);
			props["enabled"] = Protobuf.ToProtobuf(args.Enabled);
			props["ipVersion"] = Protobuf.ToProtobuf(args.IpVersion);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["protocol"] = Protobuf.ToProtobuf(args.Protocol);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			props["sourceIpAddress"] = Protobuf.ToProtobuf(args.SourceIpAddress);
			props["sourcePort"] = Protobuf.ToProtobuf(args.SourcePort);
			props["tenantId"] = Protobuf.ToProtobuf(args.TenantId);
			props["valueSpecs"] = Protobuf.ToProtobuf(args.ValueSpecs);
			return props;
		} // SerialiseArgs

	} // Rule
} // Pulumi.Openstack.Firewall
