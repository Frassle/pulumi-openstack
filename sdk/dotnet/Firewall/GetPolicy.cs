// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Firewall {

	/// <summary>
	/// A collection of arguments for invoking getPolicy.
	/// </summary>
	public struct GetPolicyArgs {
		/// <summary>
		/// The name of the firewall policy.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The ID of the firewall policy.
		/// </summary>
		public string PolicyId { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Neutron client.
		/// A Neutron client is needed to retrieve firewall policy ids. If omitted, the
		/// `region` argument of the provider is used.
		/// </summary>
		public string Region { get; set; }

		/// <summary>
		/// The owner of the firewall policy.
		/// </summary>
		public string TenantId { get; set; }

	} // GetPolicyArgs

	/// <summary>
	/// A collection of values returned by getPolicy.
	/// </summary>
	public struct GetPolicyResult {
		/// <summary>
		/// The audit status of the firewall policy.
		/// </summary>
		public bool Audited { get; set; }

		/// <summary>
		/// The description of the firewall policy.
		/// </summary>
		public string Description { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string Region { get; set; }

		/// <summary>
		/// The array of one or more firewall rules that comprise the policy.
		/// </summary>
		public string[] Rules { get; set; }

		/// <summary>
		/// The sharing status of the firewall policy.
		/// </summary>
		public bool Shared { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string TenantId { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetPolicyResult

	public static partial class FirewallModule {
		/// <summary>
		/// Use this data source to get firewall policy information of an available OpenStack firewall policy.
		/// </summary>
		public static System.Threading.Tasks.Task<GetPolicyResult> GetPolicy(GetPolicyArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["policyId"] = Protobuf.ToProtobuf(args.PolicyId);
			invokeArgs.Fields["region"] = Protobuf.ToProtobuf(args.Region);
			invokeArgs.Fields["tenantId"] = Protobuf.ToProtobuf(args.TenantId);

			var task = Pulumi.Runtime.InvokeAsync("openstack:firewall/getPolicy:getPolicy", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetPolicyResult();
				if (protobuf.Fields.ContainsKey("audited")) {
					result.Audited = Protobuf.ToBool(protobuf.Fields["audited"]);
				}
				if (protobuf.Fields.ContainsKey("description")) {
					result.Description = Protobuf.ToString(protobuf.Fields["description"]);
				}
				if (protobuf.Fields.ContainsKey("region")) {
					result.Region = Protobuf.ToString(protobuf.Fields["region"]);
				}
				if (protobuf.Fields.ContainsKey("rules")) {
					result.Rules = Protobuf.ToList(protobuf.Fields["rules"], item => Protobuf.ToString(item));
				}
				if (protobuf.Fields.ContainsKey("shared")) {
					result.Shared = Protobuf.ToBool(protobuf.Fields["shared"]);
				}
				if (protobuf.Fields.ContainsKey("tenantId")) {
					result.TenantId = Protobuf.ToString(protobuf.Fields["tenantId"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetPolicy

	} // FirewallModule
} // Pulumi.Openstack.Firewall
