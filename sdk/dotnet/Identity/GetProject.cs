// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Identity {

	/// <summary>
	/// A collection of arguments for invoking getProject.
	/// </summary>
	public struct GetProjectArgs {
		/// <summary>
		/// The domain this project belongs to.
		/// </summary>
		public string DomainId { get; set; }

		/// <summary>
		/// Whether the project is enabled or disabled. Valid
		/// values are `true` and `false`.
		/// </summary>
		public bool Enabled { get; set; }

		/// <summary>
		/// Whether this project is a domain. Valid values
		/// are `true` and `false`.
		/// </summary>
		public bool IsDomain { get; set; }

		/// <summary>
		/// The name of the project.
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// The parent of this project.
		/// </summary>
		public string ParentId { get; set; }

		public string Region { get; set; }

	} // GetProjectArgs

	/// <summary>
	/// A collection of values returned by getProject.
	/// </summary>
	public struct GetProjectResult {
		/// <summary>
		/// The description of the project.
		/// </summary>
		public string Description { get; set; }

		/// <summary>
		/// See Argument Reference above.
		/// </summary>
		public string DomainId { get; set; }

		/// <summary>
		/// The region the project is located in.
		/// </summary>
		public string Region { get; set; }

		/// <summary>
		/// id is the provider-assigned unique ID for this managed resource.
		/// </summary>
		public string Id { get; set; }

	} // GetProjectResult

	public static partial class IdentityModule {
		/// <summary>
		/// Use this data source to get the ID of an OpenStack project.
		/// </summary>
		public static System.Threading.Tasks.Task<GetProjectResult> GetProject(GetProjectArgs args, Pulumi.InvokeOptions opts = default(Pulumi.InvokeOptions)) {
			var invokeArgs = new Google.Protobuf.WellKnownTypes.Struct();
			invokeArgs.Fields["domainId"] = Protobuf.ToProtobuf(args.DomainId);
			invokeArgs.Fields["enabled"] = Protobuf.ToProtobuf(args.Enabled);
			invokeArgs.Fields["isDomain"] = Protobuf.ToProtobuf(args.IsDomain);
			invokeArgs.Fields["name"] = Protobuf.ToProtobuf(args.Name);
			invokeArgs.Fields["parentId"] = Protobuf.ToProtobuf(args.ParentId);
			invokeArgs.Fields["region"] = Protobuf.ToProtobuf(args.Region);

			var task = Pulumi.Runtime.InvokeAsync("openstack:identity/getProject:getProject", invokeArgs, opts);

			return task.ContinueWith(response => {
				var protobuf = response.Result;
				var result = new GetProjectResult();
				if (protobuf.Fields.ContainsKey("description")) {
					result.Description = Protobuf.ToString(protobuf.Fields["description"]);
				}
				if (protobuf.Fields.ContainsKey("domainId")) {
					result.DomainId = Protobuf.ToString(protobuf.Fields["domainId"]);
				}
				if (protobuf.Fields.ContainsKey("region")) {
					result.Region = Protobuf.ToString(protobuf.Fields["region"]);
				}
				if (protobuf.Fields.ContainsKey("id")) {
					result.Id = Protobuf.ToString(protobuf.Fields["id"]);
				}
				return result;
			});
		} // GetProject

	} // IdentityModule
} // Pulumi.Openstack.Identity
