// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Identity {

	/// <summary>
	/// The set of arguments for constructing a Project resource.
	/// </summary>
	public struct ProjectArgs {
		/// <summary>
		/// A description of the project.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The domain this project belongs to.
		/// </summary>
		public Pulumi.IO<string> DomainId { get; set; }

		/// <summary>
		/// Whether the project is enabled or disabled. Valid
		/// values are `true` and `false`.
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// Whether this project is a domain. Valid values
		/// are `true` and `false`.
		/// </summary>
		public Pulumi.IO<bool> IsDomain { get; set; }

		/// <summary>
		/// The name of the project.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The parent of this project.
		/// </summary>
		public Pulumi.IO<string> ParentId { get; set; }

		/// <summary>
		/// The region in which to obtain the V3 Keystone client.
		/// If omitted, the `region` argument of the provider is used. Changing this
		/// creates a new User.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

	} // ProjectArgs

	/// <summary>
	/// Manages a V3 Project resource within OpenStack Keystone.
	/// 
	/// Note: You _must_ have admin privileges in your OpenStack cloud to use
	/// this resource.
	/// </summary>
	public class Project : Pulumi.CustomResource {
		/// <summary>
		/// A description of the project.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// The domain this project belongs to.
		/// </summary>
		public Pulumi.IO<string> DomainId { get; set; }

		/// <summary>
		/// Whether the project is enabled or disabled. Valid
		/// values are `true` and `false`.
		/// </summary>
		public Pulumi.IO<bool> Enabled { get; set; }

		/// <summary>
		/// Whether this project is a domain. Valid values
		/// are `true` and `false`.
		/// </summary>
		public Pulumi.IO<bool> IsDomain { get; set; }

		/// <summary>
		/// The name of the project.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The parent of this project.
		/// </summary>
		public Pulumi.IO<string> ParentId { get; set; }

		/// <summary>
		/// The region in which to obtain the V3 Keystone client.
		/// If omitted, the `region` argument of the provider is used. Changing this
		/// creates a new User.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		public Project(string name, ProjectArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:identity/project:Project", name, SerialiseArgs(args), opts) {
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			DomainId = Outputs["domainId"].Select(item => Protobuf.ToString(item));
			Enabled = Outputs["enabled"].Select(item => Protobuf.ToBool(item));
			IsDomain = Outputs["isDomain"].Select(item => Protobuf.ToBool(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			ParentId = Outputs["parentId"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			DomainId = Outputs["domainId"].Select(item => Protobuf.ToString(item));
			Enabled = Outputs["enabled"].Select(item => Protobuf.ToBool(item));
			IsDomain = Outputs["isDomain"].Select(item => Protobuf.ToBool(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			ParentId = Outputs["parentId"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ProjectArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["domainId"] = Protobuf.ToProtobuf(args.DomainId);
			props["enabled"] = Protobuf.ToProtobuf(args.Enabled);
			props["isDomain"] = Protobuf.ToProtobuf(args.IsDomain);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["parentId"] = Protobuf.ToProtobuf(args.ParentId);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			return props;
		} // SerialiseArgs

	} // Project
} // Pulumi.Openstack.Identity
