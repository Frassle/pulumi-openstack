// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Identity {

	/// <summary>
	/// The set of arguments for constructing a Role resource.
	/// </summary>
	public struct RoleArgs {
		/// <summary>
		/// The domain the role belongs to.
		/// </summary>
		public Pulumi.IO<string> DomainId { get; set; }

		/// <summary>
		/// The name of the role.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to obtain the V3 Keystone client.
		/// If omitted, the `region` argument of the provider is used. Changing this
		/// creates a new Role.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

	} // RoleArgs

	/// <summary>
	/// Manages a V3 Role resource within OpenStack Keystone.
	/// 
	/// Note: You _must_ have admin privileges in your OpenStack cloud to use
	/// this resource.
	/// </summary>
	public class Role : Pulumi.CustomResource {
		/// <summary>
		/// The domain the role belongs to.
		/// </summary>
		public Pulumi.IO<string> DomainId { get; set; }

		/// <summary>
		/// The name of the role.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to obtain the V3 Keystone client.
		/// If omitted, the `region` argument of the provider is used. Changing this
		/// creates a new Role.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		public Role(string name, RoleArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:identity/role:Role", name, SerialiseArgs(args), opts) {
			DomainId = Outputs["domainId"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			DomainId = Outputs["domainId"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(RoleArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["domainId"] = Protobuf.ToProtobuf(args.DomainId);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			return props;
		} // SerialiseArgs

	} // Role
} // Pulumi.Openstack.Identity
