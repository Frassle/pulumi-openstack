// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Database {

	public sealed class InstanceArgsDatabase : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Charset { get; set; }
		public Pulumi.IO<string> Collate { get; set; }
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("charset", Protobuf.ToProtobuf(Charset)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("collate", Protobuf.ToProtobuf(Collate)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

	} // InstanceArgsDatabase

	public sealed class InstanceArgsDatastore : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Type { get; set; }
		public Pulumi.IO<string> Version { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("version", Protobuf.ToProtobuf(Version)));
		} // ToProtobuf

	} // InstanceArgsDatastore

	public sealed class InstanceArgsNetwork : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> FixedIpV4 { get; set; }
		public Pulumi.IO<string> FixedIpV6 { get; set; }
		public Pulumi.IO<string> Port { get; set; }
		public Pulumi.IO<string> Uuid { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fixed_ip_v4", Protobuf.ToProtobuf(FixedIpV4)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fixed_ip_v6", Protobuf.ToProtobuf(FixedIpV6)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("port", Protobuf.ToProtobuf(Port)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("uuid", Protobuf.ToProtobuf(Uuid)));
		} // ToProtobuf

	} // InstanceArgsNetwork

	public sealed class InstanceArgsUser : Pulumi.IIOProtobuf {
		public Pulumi.IO<Pulumi.IO<string>[]> Databases { get; set; }
		public Pulumi.IO<string> Host { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Password { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("databases", Protobuf.ToProtobuf(Databases, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("host", Protobuf.ToProtobuf(Host)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("password", Protobuf.ToProtobuf(Password)));
		} // ToProtobuf

	} // InstanceArgsUser

	public sealed class InstanceDatabase : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Charset { get; set; }
		public Pulumi.IO<string> Collate { get; set; }
		public Pulumi.IO<string> Name { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("charset", Protobuf.ToProtobuf(Charset)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("collate", Protobuf.ToProtobuf(Collate)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)));
		} // ToProtobuf

		public static InstanceDatabase FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			return new InstanceDatabase() {
				Charset = Protobuf.ToString(obj.Fields["charset"]),
				Collate = Protobuf.ToString(obj.Fields["collate"]),
				Name = Protobuf.ToString(obj.Fields["name"]),
			};
		} // FromProtobuf

	} // InstanceDatabase

	public sealed class InstanceDatastore : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Type { get; set; }
		public Pulumi.IO<string> Version { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("version", Protobuf.ToProtobuf(Version)));
		} // ToProtobuf

		public static InstanceDatastore FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			return new InstanceDatastore() {
				Type = Protobuf.ToString(obj.Fields["type"]),
				Version = Protobuf.ToString(obj.Fields["version"]),
			};
		} // FromProtobuf

	} // InstanceDatastore

	public sealed class InstanceNetwork : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> FixedIpV4 { get; set; }
		public Pulumi.IO<string> FixedIpV6 { get; set; }
		public Pulumi.IO<string> Port { get; set; }
		public Pulumi.IO<string> Uuid { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fixed_ip_v4", Protobuf.ToProtobuf(FixedIpV4)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("fixed_ip_v6", Protobuf.ToProtobuf(FixedIpV6)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("port", Protobuf.ToProtobuf(Port)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("uuid", Protobuf.ToProtobuf(Uuid)));
		} // ToProtobuf

		public static InstanceNetwork FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			return new InstanceNetwork() {
				FixedIpV4 = Protobuf.ToString(obj.Fields["fixed_ip_v4"]),
				FixedIpV6 = Protobuf.ToString(obj.Fields["fixed_ip_v6"]),
				Port = Protobuf.ToString(obj.Fields["port"]),
				Uuid = Protobuf.ToString(obj.Fields["uuid"]),
			};
		} // FromProtobuf

	} // InstanceNetwork

	public sealed class InstanceUser : Pulumi.IIOProtobuf {
		public Pulumi.IO<string[]> Databases { get; set; }
		public Pulumi.IO<string> Host { get; set; }
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Password { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("databases", Protobuf.ToProtobuf(Databases, item => Protobuf.ToProtobuf(item))),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("host", Protobuf.ToProtobuf(Host)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("password", Protobuf.ToProtobuf(Password)));
		} // ToProtobuf

		public static InstanceUser FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			return new InstanceUser() {
				Databases = Protobuf.ToList(obj.Fields["databases"], item => Protobuf.ToString(item)),
				Host = Protobuf.ToString(obj.Fields["host"]),
				Name = Protobuf.ToString(obj.Fields["name"]),
				Password = Protobuf.ToString(obj.Fields["password"]),
			};
		} // FromProtobuf

	} // InstanceUser

	/// <summary>
	/// The set of arguments for constructing a Instance resource.
	/// </summary>
	public struct InstanceArgs {
		/// <summary>
		/// Configuration ID to be attached to the instance. Database instance
		/// will be rebooted when configuration is detached.
		/// </summary>
		public Pulumi.IO<string> ConfigurationId { get; set; }

		/// <summary>
		/// An array of database name, charset and collate. The database
		/// object structure is documented below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<InstanceArgsDatabase>[]> Databases { get; set; }

		/// <summary>
		/// An array of database engine type and version. The datastore
		/// object structure is documented below. Changing this creates a new instance.
		/// </summary>
		public Pulumi.IO<InstanceArgsDatastore> Datastore { get; set; }

		/// <summary>
		/// The flavor ID of the desired flavor for the instance.
		/// Changing this creates new instance.
		/// </summary>
		public Pulumi.IO<string> FlavorId { get; set; }

		/// <summary>
		/// A unique name for the resource.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// An array of one or more networks to attach to the
		/// instance. The network object structure is documented below. Changing this
		/// creates a new instance.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<InstanceArgsNetwork>[]> Networks { get; set; }

		/// <summary>
		/// The region in which to create the db instance. Changing this
		/// creates a new instance.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// Specifies the volume size in GB. Changing this creates new instance.
		/// </summary>
		public Pulumi.IO<int> Size { get; set; }

		/// <summary>
		/// An array of username, password, host and databases. The user
		/// object structure is documented below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<InstanceArgsUser>[]> Users { get; set; }

	} // InstanceArgs

	/// <summary>
	/// Manages a V1 DB instance resource within OpenStack.
	/// </summary>
	public class Instance : Pulumi.CustomResource {
		/// <summary>
		/// Configuration ID to be attached to the instance. Database instance
		/// will be rebooted when configuration is detached.
		/// </summary>
		public Pulumi.IO<string> ConfigurationId { get; set; }

		/// <summary>
		/// An array of database name, charset and collate. The database
		/// object structure is documented below.
		/// </summary>
		public Pulumi.IO<InstanceDatabase[]> Databases { get; set; }

		/// <summary>
		/// An array of database engine type and version. The datastore
		/// object structure is documented below. Changing this creates a new instance.
		/// </summary>
		public Pulumi.IO<InstanceDatastore> Datastore { get; set; }

		/// <summary>
		/// The flavor ID of the desired flavor for the instance.
		/// Changing this creates new instance.
		/// </summary>
		public Pulumi.IO<string> FlavorId { get; set; }

		/// <summary>
		/// A unique name for the resource.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// An array of one or more networks to attach to the
		/// instance. The network object structure is documented below. Changing this
		/// creates a new instance.
		/// </summary>
		public Pulumi.IO<InstanceNetwork[]> Networks { get; set; }

		/// <summary>
		/// The region in which to create the db instance. Changing this
		/// creates a new instance.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// Specifies the volume size in GB. Changing this creates new instance.
		/// </summary>
		public Pulumi.IO<int> Size { get; set; }

		/// <summary>
		/// An array of username, password, host and databases. The user
		/// object structure is documented below.
		/// </summary>
		public Pulumi.IO<InstanceUser[]> Users { get; set; }

		public Instance(string name, InstanceArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:database/instance:Instance", name, SerialiseArgs(args), opts) {
			ConfigurationId = Outputs["configurationId"].Select(item => Protobuf.ToString(item));
			Databases = Outputs["databases"].Select(item => Protobuf.ToList(item, item1 => InstanceDatabase.FromProtobuf(item1)));
			Datastore = Outputs["datastore"].Select(item => InstanceDatastore.FromProtobuf(item));
			FlavorId = Outputs["flavorId"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Networks = Outputs["networks"].Select(item => Protobuf.ToList(item, item1 => InstanceNetwork.FromProtobuf(item1)));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Size = Outputs["size"].Select(item => Protobuf.ToInt(item));
			Users = Outputs["users"].Select(item => Protobuf.ToList(item, item1 => InstanceUser.FromProtobuf(item1)));
			ConfigurationId = Outputs["configurationId"].Select(item => Protobuf.ToString(item));
			Databases = Outputs["databases"].Select(item => Protobuf.ToList(item, item1 => InstanceDatabase.FromProtobuf(item1)));
			Datastore = Outputs["datastore"].Select(item => InstanceDatastore.FromProtobuf(item));
			FlavorId = Outputs["flavorId"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Networks = Outputs["networks"].Select(item => Protobuf.ToList(item, item1 => InstanceNetwork.FromProtobuf(item1)));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Size = Outputs["size"].Select(item => Protobuf.ToInt(item));
			Users = Outputs["users"].Select(item => Protobuf.ToList(item, item1 => InstanceUser.FromProtobuf(item1)));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(InstanceArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["configurationId"] = Protobuf.ToProtobuf(args.ConfigurationId);
			props["databases"] = Protobuf.ToProtobuf(args.Databases, item => Protobuf.ToProtobuf(item));
			props["datastore"] = Protobuf.ToProtobuf(args.Datastore);
			props["flavorId"] = Protobuf.ToProtobuf(args.FlavorId);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["networks"] = Protobuf.ToProtobuf(args.Networks, item => Protobuf.ToProtobuf(item));
			props["region"] = Protobuf.ToProtobuf(args.Region);
			props["size"] = Protobuf.ToProtobuf(args.Size);
			props["users"] = Protobuf.ToProtobuf(args.Users, item => Protobuf.ToProtobuf(item));
			return props;
		} // SerialiseArgs

	} // Instance
} // Pulumi.Openstack.Database
