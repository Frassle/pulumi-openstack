// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Database {

	public sealed class ConfigurationArgsConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Value { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("value", Protobuf.ToProtobuf(Value)));
		} // ToProtobuf

	} // ConfigurationArgsConfiguration

	public sealed class ConfigurationArgsDatastore : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Type { get; set; }
		public Pulumi.IO<string> Version { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("version", Protobuf.ToProtobuf(Version)));
		} // ToProtobuf

	} // ConfigurationArgsDatastore

	public sealed class ConfigurationConfiguration : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Name { get; set; }
		public Pulumi.IO<string> Value { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("name", Protobuf.ToProtobuf(Name)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("value", Protobuf.ToProtobuf(Value)));
		} // ToProtobuf

		public static ConfigurationConfiguration FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			return new ConfigurationConfiguration() {
				Name = Protobuf.ToString(obj.Fields["name"]),
				Value = Protobuf.ToString(obj.Fields["value"]),
			};
		} // FromProtobuf

	} // ConfigurationConfiguration

	public sealed class ConfigurationDatastore : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Type { get; set; }
		public Pulumi.IO<string> Version { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("type", Protobuf.ToProtobuf(Type)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("version", Protobuf.ToProtobuf(Version)));
		} // ToProtobuf

		public static ConfigurationDatastore FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			return new ConfigurationDatastore() {
				Type = Protobuf.ToString(obj.Fields["type"]),
				Version = Protobuf.ToString(obj.Fields["version"]),
			};
		} // FromProtobuf

	} // ConfigurationDatastore

	/// <summary>
	/// The set of arguments for constructing a Configuration resource.
	/// </summary>
	public struct ConfigurationArgs {
		/// <summary>
		/// An array of configuration parameter name and value. Can be specified multiple times. The configuration object structure is documented below.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<ConfigurationArgsConfiguration>[]> Configurations { get; set; }

		/// <summary>
		/// An array of database engine type and version. The datastore
		/// object structure is documented below. Changing this creates resource.
		/// </summary>
		public Pulumi.IO<ConfigurationArgsDatastore> Datastore { get; set; }

		/// <summary>
		/// Description of the resource.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// A unique name for the resource.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to create the db instance. Changing this
		/// creates a new instance.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

	} // ConfigurationArgs

	/// <summary>
	/// Manages a V1 DB configuration resource within OpenStack.
	/// </summary>
	public class Configuration : Pulumi.CustomResource {
		/// <summary>
		/// An array of configuration parameter name and value. Can be specified multiple times. The configuration object structure is documented below.
		/// </summary>
		public Pulumi.IO<ConfigurationConfiguration[]> Configurations { get; set; }

		/// <summary>
		/// An array of database engine type and version. The datastore
		/// object structure is documented below. Changing this creates resource.
		/// </summary>
		public Pulumi.IO<ConfigurationDatastore> Datastore { get; set; }

		/// <summary>
		/// Description of the resource.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// A unique name for the resource.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to create the db instance. Changing this
		/// creates a new instance.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		public Configuration(string name, ConfigurationArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:database/configuration:Configuration", name, SerialiseArgs(args), opts) {
			Configurations = Outputs["configurations"].Select(item => Protobuf.ToList(item, item1 => ConfigurationConfiguration.FromProtobuf(item1)));
			Datastore = Outputs["datastore"].Select(item => ConfigurationDatastore.FromProtobuf(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Configurations = Outputs["configurations"].Select(item => Protobuf.ToList(item, item1 => ConfigurationConfiguration.FromProtobuf(item1)));
			Datastore = Outputs["datastore"].Select(item => ConfigurationDatastore.FromProtobuf(item));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(ConfigurationArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["configurations"] = Protobuf.ToProtobuf(args.Configurations, item => Protobuf.ToProtobuf(item));
			props["datastore"] = Protobuf.ToProtobuf(args.Datastore);
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			return props;
		} // SerialiseArgs

	} // Configuration
} // Pulumi.Openstack.Database
