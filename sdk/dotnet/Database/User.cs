// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Database {

	/// <summary>
	/// The set of arguments for constructing a User resource.
	/// </summary>
	public struct UserArgs {
		/// <summary>
		/// A list of database user should have access to.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<string>[]> Databases { get; set; }

		public Pulumi.IO<string> Host { get; set; }

		public Pulumi.IO<string> InstanceId { get; set; }

		/// <summary>
		/// A unique name for the resource.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// User's password.
		/// </summary>
		public Pulumi.IO<string> Password { get; set; }

		/// <summary>
		/// Openstack region resource is created in.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

	} // UserArgs

	/// <summary>
	/// Manages a V1 DB user resource within OpenStack.
	/// </summary>
	public class User : Pulumi.CustomResource {
		/// <summary>
		/// A list of database user should have access to.
		/// </summary>
		public Pulumi.IO<string[]> Databases { get; set; }

		public Pulumi.IO<string> Host { get; set; }

		public Pulumi.IO<string> InstanceId { get; set; }

		/// <summary>
		/// A unique name for the resource.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// User's password.
		/// </summary>
		public Pulumi.IO<string> Password { get; set; }

		/// <summary>
		/// Openstack region resource is created in.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		public User(string name, UserArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:database/user:User", name, SerialiseArgs(args), opts) {
			Databases = Outputs["databases"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			Host = Outputs["host"].Select(item => Protobuf.ToString(item));
			InstanceId = Outputs["instanceId"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Password = Outputs["password"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Databases = Outputs["databases"].Select(item => Protobuf.ToList(item, item1 => Protobuf.ToString(item1)));
			Host = Outputs["host"].Select(item => Protobuf.ToString(item));
			InstanceId = Outputs["instanceId"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Password = Outputs["password"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(UserArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["databases"] = Protobuf.ToProtobuf(args.Databases, item => Protobuf.ToProtobuf(item));
			props["host"] = Protobuf.ToProtobuf(args.Host);
			props["instanceId"] = Protobuf.ToProtobuf(args.InstanceId);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["password"] = Protobuf.ToProtobuf(args.Password);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			return props;
		} // SerialiseArgs

	} // User
} // Pulumi.Openstack.Database
