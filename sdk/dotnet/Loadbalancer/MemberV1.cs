// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Loadbalancer {

	/// <summary>
	/// The set of arguments for constructing a MemberV1 resource.
	/// </summary>
	public struct MemberV1Args {
		/// <summary>
		/// The IP address of the member. Changing this creates a
		/// new member.
		/// </summary>
		public Pulumi.IO<string> Address { get; set; }

		/// <summary>
		/// The administrative state of the member.
		/// Acceptable values are 'true' and 'false'. Changing this value updates the
		/// state of the existing member.
		/// </summary>
		public Pulumi.IO<bool> AdminStateUp { get; set; }

		/// <summary>
		/// The ID of the LB pool. Changing this creates a new
		/// member.
		/// </summary>
		public Pulumi.IO<string> PoolId { get; set; }

		/// <summary>
		/// An integer representing the port on which the member is
		/// hosted. Changing this creates a new member.
		/// </summary>
		public Pulumi.IO<int> Port { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Networking client.
		/// A Networking client is needed to create an LB member. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// LB member.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The owner of the member. Required if admin wants to
		/// create a member for another tenant. Changing this creates a new member.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

		/// <summary>
		/// The load balancing weight of the member. This is currently unable
		/// to be set through Terraform.
		/// </summary>
		public Pulumi.IO<int> Weight { get; set; }

	} // MemberV1Args

	/// <summary>
	/// Manages a V1 load balancer member resource within OpenStack.
	/// </summary>
	public class MemberV1 : Pulumi.CustomResource {
		/// <summary>
		/// The IP address of the member. Changing this creates a
		/// new member.
		/// </summary>
		public Pulumi.IO<string> Address { get; set; }

		/// <summary>
		/// The administrative state of the member.
		/// Acceptable values are 'true' and 'false'. Changing this value updates the
		/// state of the existing member.
		/// </summary>
		public Pulumi.IO<bool> AdminStateUp { get; set; }

		/// <summary>
		/// The ID of the LB pool. Changing this creates a new
		/// member.
		/// </summary>
		public Pulumi.IO<string> PoolId { get; set; }

		/// <summary>
		/// An integer representing the port on which the member is
		/// hosted. Changing this creates a new member.
		/// </summary>
		public Pulumi.IO<int> Port { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Networking client.
		/// A Networking client is needed to create an LB member. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// LB member.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// The owner of the member. Required if admin wants to
		/// create a member for another tenant. Changing this creates a new member.
		/// </summary>
		public Pulumi.IO<string> TenantId { get; set; }

		/// <summary>
		/// The load balancing weight of the member. This is currently unable
		/// to be set through Terraform.
		/// </summary>
		public Pulumi.IO<int> Weight { get; set; }

		public MemberV1(string name, MemberV1Args args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:loadbalancer/memberV1:MemberV1", name, SerialiseArgs(args), opts) {
			Address = Outputs["address"].Select(item => Protobuf.ToString(item));
			AdminStateUp = Outputs["adminStateUp"].Select(item => Protobuf.ToBool(item));
			PoolId = Outputs["poolId"].Select(item => Protobuf.ToString(item));
			Port = Outputs["port"].Select(item => Protobuf.ToInt(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
			Weight = Outputs["weight"].Select(item => Protobuf.ToInt(item));
			Address = Outputs["address"].Select(item => Protobuf.ToString(item));
			AdminStateUp = Outputs["adminStateUp"].Select(item => Protobuf.ToBool(item));
			PoolId = Outputs["poolId"].Select(item => Protobuf.ToString(item));
			Port = Outputs["port"].Select(item => Protobuf.ToInt(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			TenantId = Outputs["tenantId"].Select(item => Protobuf.ToString(item));
			Weight = Outputs["weight"].Select(item => Protobuf.ToInt(item));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(MemberV1Args args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["address"] = Protobuf.ToProtobuf(args.Address);
			props["adminStateUp"] = Protobuf.ToProtobuf(args.AdminStateUp);
			props["poolId"] = Protobuf.ToProtobuf(args.PoolId);
			props["port"] = Protobuf.ToProtobuf(args.Port);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			props["tenantId"] = Protobuf.ToProtobuf(args.TenantId);
			props["weight"] = Protobuf.ToProtobuf(args.Weight);
			return props;
		} // SerialiseArgs

	} // MemberV1
} // Pulumi.Openstack.Loadbalancer
