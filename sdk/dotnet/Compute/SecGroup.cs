// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Linq;

namespace Pulumi.Openstack.Compute {

	public sealed class SecGroupArgsRule : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Cidr { get; set; }
		public Pulumi.IO<string> FromGroupId { get; set; }
		public Pulumi.IO<int> FromPort { get; set; }
		public Pulumi.IO<string> Id { get; set; }
		public Pulumi.IO<string> IpProtocol { get; set; }
		public Pulumi.IO<bool> Self { get; set; }
		public Pulumi.IO<int> ToPort { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("cidr", Protobuf.ToProtobuf(Cidr)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("from_group_id", Protobuf.ToProtobuf(FromGroupId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("from_port", Protobuf.ToProtobuf(FromPort)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("id", Protobuf.ToProtobuf(Id)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ip_protocol", Protobuf.ToProtobuf(IpProtocol)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("self", Protobuf.ToProtobuf(Self)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("to_port", Protobuf.ToProtobuf(ToPort)));
		} // ToProtobuf

	} // SecGroupArgsRule

	public sealed class SecGroupRule : Pulumi.IIOProtobuf {
		public Pulumi.IO<string> Cidr { get; set; }
		public Pulumi.IO<string> FromGroupId { get; set; }
		public Pulumi.IO<int> FromPort { get; set; }
		public Pulumi.IO<string> Id { get; set; }
		public Pulumi.IO<string> IpProtocol { get; set; }
		public Pulumi.IO<bool> Self { get; set; }
		public Pulumi.IO<int> ToPort { get; set; }

		public Pulumi.IO<Google.Protobuf.WellKnownTypes.Value> ToProtobuf() {
			return Pulumi.Protobuf.ToProtobuf(
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("cidr", Protobuf.ToProtobuf(Cidr)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("from_group_id", Protobuf.ToProtobuf(FromGroupId)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("from_port", Protobuf.ToProtobuf(FromPort)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("id", Protobuf.ToProtobuf(Id)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("ip_protocol", Protobuf.ToProtobuf(IpProtocol)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("self", Protobuf.ToProtobuf(Self)),
				new KeyValuePair<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>("to_port", Protobuf.ToProtobuf(ToPort)));
		} // ToProtobuf

		public static SecGroupRule FromProtobuf(Google.Protobuf.WellKnownTypes.Value value) {
			var obj = value.StructValue;
			return new SecGroupRule() {
				Cidr = Protobuf.ToString(obj.Fields["cidr"]),
				FromGroupId = Protobuf.ToString(obj.Fields["from_group_id"]),
				FromPort = Protobuf.ToInt(obj.Fields["from_port"]),
				Id = Protobuf.ToString(obj.Fields["id"]),
				IpProtocol = Protobuf.ToString(obj.Fields["ip_protocol"]),
				Self = Protobuf.ToBool(obj.Fields["self"]),
				ToPort = Protobuf.ToInt(obj.Fields["to_port"]),
			};
		} // FromProtobuf

	} // SecGroupRule

	/// <summary>
	/// The set of arguments for constructing a SecGroup resource.
	/// </summary>
	public struct SecGroupArgs {
		/// <summary>
		/// A description for the security group. Changing this
		/// updates the `description` of an existing security group.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// A unique name for the security group. Changing this
		/// updates the `name` of an existing security group.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Compute client.
		/// A Compute client is needed to create a security group. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// security group.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// A rule describing how the security group operates. The
		/// rule object structure is documented below. Changing this updates the
		/// security group rules. As shown in the example above, multiple rule blocks
		/// may be used.
		/// </summary>
		public Pulumi.IO<Pulumi.IO<SecGroupArgsRule>[]> Rules { get; set; }

	} // SecGroupArgs

	/// <summary>
	/// Manages a V2 security group resource within OpenStack.
	/// 
	/// Please note that managing security groups through the OpenStack Compute API
	/// has been deprecated. Unless you are using an older OpenStack environment, it is
	/// recommended to use the `openstack_networking_secgroup_v2`
	/// and `openstack_networking_secgroup_rule_v2`
	/// resources instead, which uses the OpenStack Networking API.
	/// </summary>
	public class SecGroup : Pulumi.CustomResource {
		/// <summary>
		/// A description for the security group. Changing this
		/// updates the `description` of an existing security group.
		/// </summary>
		public Pulumi.IO<string> Description { get; set; }

		/// <summary>
		/// A unique name for the security group. Changing this
		/// updates the `name` of an existing security group.
		/// </summary>
		public Pulumi.IO<string> Name { get; set; }

		/// <summary>
		/// The region in which to obtain the V2 Compute client.
		/// A Compute client is needed to create a security group. If omitted, the
		/// `region` argument of the provider is used. Changing this creates a new
		/// security group.
		/// </summary>
		public Pulumi.IO<string> Region { get; set; }

		/// <summary>
		/// A rule describing how the security group operates. The
		/// rule object structure is documented below. Changing this updates the
		/// security group rules. As shown in the example above, multiple rule blocks
		/// may be used.
		/// </summary>
		public Pulumi.IO<SecGroupRule[]> Rules { get; set; }

		public SecGroup(string name, SecGroupArgs args, Pulumi.ResourceOptions opts = default(Pulumi.ResourceOptions))
			: base("openstack:compute/secGroup:SecGroup", name, SerialiseArgs(args), opts) {
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Rules = Outputs["rules"].Select(item => Protobuf.ToList(item, item1 => SecGroupRule.FromProtobuf(item1)));
			Description = Outputs["description"].Select(item => Protobuf.ToString(item));
			Name = Outputs["name"].Select(item => Protobuf.ToString(item));
			Region = Outputs["region"].Select(item => Protobuf.ToString(item));
			Rules = Outputs["rules"].Select(item => Protobuf.ToList(item, item1 => SecGroupRule.FromProtobuf(item1)));
		} // ctor

		private static Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>> SerialiseArgs(SecGroupArgs args) {
			var props = new Dictionary<string, Pulumi.IO<Google.Protobuf.WellKnownTypes.Value>>();
			props["description"] = Protobuf.ToProtobuf(args.Description);
			props["name"] = Protobuf.ToProtobuf(args.Name);
			props["region"] = Protobuf.ToProtobuf(args.Region);
			props["rules"] = Protobuf.ToProtobuf(args.Rules, item => Protobuf.ToProtobuf(item));
			return props;
		} // SerialiseArgs

	} // SecGroup
} // Pulumi.Openstack.Compute
